start[Rules] <- rules ENDOFFILE { rules }
rules[Rules] <- rule rules { prepend_vector(rules, rule) }
    / rule { create_vector(rule) }
rule[Rule] <- NAME LBRACK type RBRACK ws "<-" ws alts NEWLINE INDENT more_alts UNINDENT { Rule(name.value, concat(alts, more_alts), type) }
    / NAME LBRACK type RBRACK ws "<-" ws alts NEWLINE { Rule(name.value, alts, type) }
    / NAME LBRACK type RBRACK ws "<-" ws NEWLINE INDENT more_alts UNINDENT { Rule(name.value, more_alts, type) }

more_alts[Alts] <- "/" ws alts NEWLINE more_alts { concat(alts, more_alts) }
    / "/" ws alts NEWLINE { alts }

alts[Alts] <- alts ws "/" ws alt { append_vector(alts, alt) }
    / alt { create_vector(alt) }
alt[Alt] <- items ws LCURL type RCURL { Alt(items, type) }

items[Strings] <- items ws item { append_vector(items, item) }
    / item { create_vector(item) }
item[String] <- NAME { name.value }
    / STRING { string.value }

type[String] <- parts { parts }
parts[String] <- parts part { parts.append(part) }
    / part { part }
part[String] <- NAME { name.value }
    / SEMICOLON { semicolon.value }
    / "<" { token.value }
    / ">" { token.value }
    / LPAREN { lparen.value }
    / RPAREN { rparen.value }
    / ws { ws }
    / COMMA { comma.value }
    / DOT { dot.value }

ws[String] <- WHITESPACE { whitespace.value }
