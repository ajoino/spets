start[std::vector<Rule>] <- rules ENDOFFILE { rules }
rules[std::vector<Rule>] <- rules rule { append_vector(rules, rule) }
    / rule { {{rule}} }
rule[Rule] <- NAME "[" type "]" ws "<-" ws alts NEWLINE { Rule{name.value, alts, {}} }

alts[std::vector<Alt>] <- alts ws "/" ws alt { {append_vector(alts, alt)} }
    / alt { {{alt}} }
alt[Alt] <- items { Alt{items, {}} }

items[std::vector<std::string>] <- items item { {append_vector(items, item)} }
    / item { {{item}} }
item[std::string] <- NAME { {name.value} }
    / STRING { {string.value } }

type[std::string] <- parts { parts }
parts[std::string] <- parts part { parts.append(part) }
    / part { part }
part[std::string] <- NAME { name.value }
    / SEMICOLON { semicolon.value }
    / "<" { token.value }
    / ">" { token.value }
ws[std::string] <- WHITESPACE { whitespace.value }
